type: object
required:
  - websiteId
  - customerId
  - currency
  - amount
  - type
properties:
  id:
    description: The payment identifier string
    readOnly: true
    allOf:
      - $ref: "#/components/schemas/ResourceId"
  websiteId:
    description: The website identifier string
    allOf:
      - $ref: "#/components/schemas/ResourceId"
  customerId:
    description: The customer identifier string
    allOf:
      - $ref: "#/components/schemas/ResourceId"
  currency:
    description: The payment currency ISO Alpha code
    type: string
  amount:
    description: The payment amount
    type: number
    format: double
  type:
    description: |
      The type of transaction requested.  It defaults to type `sale` for backwards compatibility.
      You should always include the type within your API request.
      This supports a limited subset of Transaction types.  To refund or void, use the refund endpoint.
      To `capture` use the `sale` endpoint.  It will capture if there are any eligible
      transactions of type `authorize` that can be captured.
    type: string
    enum:
      - authorize
      - sale
      - credit
  invoiceIds:
    description: | 
      The array of invoice identifiers.  It's important to note that the transaction
      amount can be more or less than the combined invoice amounts.  If the transaction
      is a type `sale` and it is `approved` it will be applied to these invoices in
      the order of the first issued invoice to the most recently issued invoice.  If
      there are enough funds to fully pay an invoice, the invoice status will be marked
      as paid.
    type: array
    items:
      $ref: "#/components/schemas/ResourceId"
  paymentInstrument:
    description: |
      If not supplied, Rebilly will use the Customer's default payment instrument. 
      If there is no default payment instrument for the Customer, then there
      will be an API error.
    allOf:
      - $ref: "#/components/schemas/PaymentInstrument"
  orderId:
    description: |
      The identifier string used to prevent duplicate requests and used with 3rd party gateways.
      If the orderId is not supplied, we will generate one for you, and it will probably match
      the transactionId.  If an `orderId` is supplied with the request, we we will ensure
      the same exact `orderId` has not been used within the past 24 hours.  If it has, we will
      prevent the transaction from being processed because it is a duplicate.
    allOf:
      - $ref: "#/components/schemas/ResourceId"
  description:
    description: The payment description
    type: string
    maxLength: 255
  retryInstruction:
    $ref: "#/components/schemas/PaymentRetry"
  scheduledTime:
    description: |
      You may optionally schedule a transaction for future processing.  This is NOT recommended.  
      If you do decide to supply this information, it is the time the the transaction is 
      scheduled for processing.
    type: string
    format: date-time
  customFields:
    $ref: "#/components/schemas/ResourceCustomFields"
  billingAddress:
    description: Billing Address
    allOf:
      - $ref: "#/components/schemas/ContactObject"
  status:
    description: Payment status
    type: string
    readOnly: true
    enum:
     - scheduled
     - queued
     - in-progress
     - incomplete
     - waiting-gateway
     - suspended
     - completed
  result:
    description: Payment result
    type: string
    readOnly: true
    enum:
     - approved
     - declined
     - canceled
     - abandoned
     - unknown
  riskMetadata:
    description: Risk metadata
    allOf:
      - $ref: "#/components/schemas/RiskMetadata"
  createdTime:
    description: Payment created time
    allOf:
      - $ref: "#/components/schemas/ServerTimestamp"
  updatedTime:
    description: Payment updated time
    allOf:
      - $ref: "#/components/schemas/ServerTimestamp"
  _links:
    type: array
    description: The links related to resource
    readOnly: true
    minItems: 1
    items:
      anyOf:
      - $ref: "#/components/schemas/SelfLink"
      - $ref: "#/components/schemas/WebsiteLink"
      - $ref: "#/components/schemas/TransactionLink"
      - $ref: "#/components/schemas/ApprovalUrlLink"
      - $ref: "#/components/schemas/LeadSourceLink"
